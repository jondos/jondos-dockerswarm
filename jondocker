#!/bin/bash

if [ "$1" = "--install" ] ; then
  install -D -v -m 755 $0 /usr/local/bin/$(basename $0)
  exit 0
fi

PARAMS=""
VOLUMES=""
IMAGE=""

function map {
  map_from=$1
  shift
  test "$1" = "to" && shift
  mkdir -p $map_from
  map_to=$1
  VOLUMES="$VOLUMES -v $map_from:$map_to"
  echo VOLUME: $map_from:$map_to
}

function prepareImage {
  IMGNAME=$1
  shift

  if [ -d $IMGNAME ] ; then
    docker build -t $IMGNAME $@ $IMGNAME || exit 1
  else
    docker images | grep -q $IMGNAME || { docker pull $IMGNAME || exit 1 ; }
  fi
}

function depends {
  test "$1" = "on" && shift
  CONTAINER=$1
  docker ps | grep $CONTAINER || { echo Depending on $CONTAINER ; ./$CONTAINER.jd ; }
  PARAMS="$PARAMS --link $CONTAINER"
}

function port {
  echo PORT: $1
  PARAMS="$PARAMS -p $1"
}

function params {
  PARAMS=$@
}

function image {
  IMAGE=$1
}

CONTNAME=$(basename $1)
CONTNAME=${CONTNAME%.*}

IMAGE=$CONTNAME

. $1

prepareImage $IMAGE

if [ -f nginx/$CONTNAME.conf ] ; then
  ln -sf nginx/$CONTNAME.conf /etc/nginx/sites-enabled/
  CONTAINERHOSTNAME=$(grep server_name nginx/$CONTNAME.conf)
  CONTAINERHOSTNAME=${CONTAINERHOSTNAME##* }
  CONTAINERHOSTNAME=${CONTAINERHOSTNAME%;*}
  [[ "$PARAMS" == *"-h"* ]] || PARAMS="$PARAMS -h $CONTAINERHOSTNAME"
  echo "-d $CONTAINERHOSTNAME" >> certbot-domains.conf
  echo "* Please restart/reload nginx"
  echo "* Please check SSL certificates" 
fi

docker start $CONTNAME || docker run -d --name $CONTNAME $VOLUMES $PARAMS $IMAGE

test "$(type -t post_startup)" = "function" && post_startup
